package br.com.lighthost.kotlinDactylApi.helpers

object CodeMirrorChecker {
    data class CodeMirror(var name: String, var mime: String, var mode: String, var ext: List<String>)
    private val typesList: MutableList<CodeMirror> = mutableListOf()

    fun check(file: String): String? {
        val ext = file.substringAfterLast(".")
        return typesList.firstOrNull { it.ext.contains(ext) }?.mode
    }

    init {
        typesList.add(CodeMirror("PGP", "NULL", "asciiarmor", listOf("asc", "pgp", "sig")))
        typesList.add(CodeMirror("ASN.1", "text/x-ttcn-asn", "asn.1", listOf("asn", "asn1")))
        typesList.add(CodeMirror("Brainfuck", "text/x-brainfuck", "brainfuck", listOf("b", "bf")))
        typesList.add(CodeMirror("C", "text/x-csrc", "clike", listOf("c", "h", "ino")))
        typesList.add(CodeMirror("C++", "text/x-c++src", "clike", listOf("cpp", "c++", "cc", "cxx", "hpp", "h++", "hh", "hxx")))
        typesList.add(CodeMirror("Cobol", "text/x-cobol", "cobol", listOf("cob", "cpy", "cbl")))
        typesList.add(CodeMirror("C#", "text/x-csharp", "clike", listOf("cs")))
        typesList.add(CodeMirror("Clojure", "text/x-clojure", "clojure", listOf("clj", "cljc", "cljx")))
        typesList.add(CodeMirror("ClojureScript", "text/x-clojurescript", "clojure", listOf("cljs")))
        typesList.add(CodeMirror("Closure Stylesheets (GSS)))", "text/x-gss", "css", listOf("gss")))
        typesList.add(CodeMirror("CMake", "text/x-cmake", "cmake", listOf("cmake", "cmake.in")))
        typesList.add(CodeMirror("CoffeeScript", "NULL", "coffeescript", listOf("coffee")))
        typesList.add(CodeMirror("Common Lisp", "text/x-common-lisp", "commonlisp", listOf("cl", "lisp", "el")))
        typesList.add(CodeMirror("Cypher", "application/x-cypher-query", "cypher", listOf("cyp", "cypher")))
        typesList.add(CodeMirror("Cython", "text/x-cython", "python", listOf("pyx", "pxd", "pxi")))
        typesList.add(CodeMirror("Crystal", "text/x-crystal", "crystal", listOf("cr")))
        typesList.add(CodeMirror("CSS", "text/css", "css", listOf("css")))
        typesList.add(CodeMirror("CQL", "text/x-cassandra", "sql", listOf("cql")))
        typesList.add(CodeMirror("D", "text/x-d", "d", listOf("d")))
        typesList.add(CodeMirror("Dart", "NULL", "dart", listOf("dart")))
        typesList.add(CodeMirror("diff", "text/x-diff", "diff", listOf("diff", "patch")))
        typesList.add(CodeMirror("DTD", "application/xml-dtd", "dtd", listOf("dtd")))
        typesList.add(CodeMirror("Dylan", "text/x-dylan", "dylan", listOf("dylan", "dyl", "intr")))
        typesList.add(CodeMirror("ECL", "text/x-ecl", "ecl", listOf("ecl")))
        typesList.add(CodeMirror("edn", "application/edn", "clojure", listOf("edn")))
        typesList.add(CodeMirror("Eiffel", "text/x-eiffel", "eiffel", listOf("e")))
        typesList.add(CodeMirror("Elm", "text/x-elm", "elm", listOf("elm")))
        typesList.add(CodeMirror("Embedded JavaScript", "application/x-ejs", "htmlembedded", listOf("ejs")))
        typesList.add(CodeMirror("Embedded Ruby", "application/x-erb", "htmlembedded", listOf("erb")))
        typesList.add(CodeMirror("Erlang", "text/x-erlang", "erlang", listOf("erl")))
        typesList.add(CodeMirror("Factor", "text/x-factor", "factor", listOf("factor")))
        typesList.add(CodeMirror("Forth", "text/x-forth", "forth", listOf("forth", "fth", "4th")))
        typesList.add(CodeMirror("Fortran", "text/x-fortran", "fortran", listOf("f", "for", "f77", "f90", "f95")))
        typesList.add(CodeMirror("F#", "text/x-fsharp", "mllike", listOf("fs")))
        typesList.add(CodeMirror("Gas", "text/x-gas", "gas", listOf("s")))
        typesList.add(CodeMirror("Gherkin", "text/x-feature", "gherkin", listOf("feature")))
        typesList.add(CodeMirror("Go", "text/x-go", "go", listOf("go")))
        typesList.add(CodeMirror("Groovy", "text/x-groovy", "groovy", listOf("groovy", "gradle")))
        typesList.add(CodeMirror("HAML", "text/x-haml", "haml", listOf("haml")))
        typesList.add(CodeMirror("Haskell", "text/x-haskell", "haskell", listOf("hs")))
        typesList.add(CodeMirror("Haskell (Literate)))", "text/x-literate-haskell", "haskell-literate", listOf("lhs")))
        typesList.add(CodeMirror("Haxe", "text/x-haxe", "haxe", listOf("hx")))
        typesList.add(CodeMirror("HXML", "text/x-hxml", "haxe", listOf("hxml")))
        typesList.add(CodeMirror("ASP.NET", "application/x-aspx", "htmlembedded", listOf("aspx")))
        typesList.add(CodeMirror("HTML", "text/html", "htmlmixed", listOf("html", "htm", "handlebars", "hbs")))
        typesList.add(CodeMirror("IDL", "text/x-idl", "idl", listOf("pro")))
        typesList.add(CodeMirror("Pug", "text/x-pug", "pug", listOf("jade", "pug")))
        typesList.add(CodeMirror("Java", "text/x-java", "clike", listOf("java")))
        typesList.add(CodeMirror("Java Server Pages", "application/x-jsp", "htmlembedded", listOf("jsp")))
        typesList.add(CodeMirror("JavaScript", "NULL", "javascript", listOf("js")))
        typesList.add(CodeMirror("JSON", "NULL", "javascript", listOf("json", "map")))
        typesList.add(CodeMirror("JSON-LD", "application/ld+json", "javascript", listOf("jsonld")))
        typesList.add(CodeMirror("JSX", "text/jsx", "jsx", listOf("jsx")))
        typesList.add(CodeMirror("Jinja2", "text/jinja2", "jinja2", listOf("j2", "jinja", "jinja2")))
        typesList.add(CodeMirror("Julia", "text/x-julia", "julia", listOf("jl")))
        typesList.add(CodeMirror("Kotlin", "text/x-kotlin", "clike", listOf("kt")))
        typesList.add(CodeMirror("LESS", "text/x-less", "css", listOf("less")))
        typesList.add(CodeMirror("LiveScript", "text/x-livescript", "livescript", listOf("ls")))
        typesList.add(CodeMirror("Lua", "text/x-lua", "lua", listOf("lua")))
        typesList.add(CodeMirror("Markdown", "text/x-markdown", "markdown", listOf("markdown", "md", "mkd")))
        typesList.add(CodeMirror("Mathematica", "text/x-mathematica", "mathematica", listOf("m", "nb", "wl", "wls")))
        typesList.add(CodeMirror("Modelica", "text/x-modelica", "modelica", listOf("mo")))
        typesList.add(CodeMirror("MUMPS", "text/x-mumps", "mumps", listOf("mps")))
        typesList.add(CodeMirror("mbox", "application/mbox", "mbox", listOf("mbox")))
        typesList.add(CodeMirror("NSIS", "text/x-nsis", "nsis", listOf("nsh", "nsi")))
        typesList.add(CodeMirror("NTriples", "NULL", "ntriples", listOf("nt", "nq")))
        typesList.add(CodeMirror("Objective-C", "text/x-objectivec", "clike", listOf("m")))
        typesList.add(CodeMirror("Objective-C++", "text/x-objectivec++", "clike", listOf("mm")))
        typesList.add(CodeMirror("OCaml", "text/x-ocaml", "mllike", listOf("ml", "mli", "mll", "mly")))
        typesList.add(CodeMirror("Octave", "text/x-octave", "octave", listOf("m")))
        typesList.add(CodeMirror("Oz", "text/x-oz", "oz", listOf("oz")))
        typesList.add(CodeMirror("Pascal", "text/x-pascal", "pascal", listOf("p", "pas")))
        typesList.add(CodeMirror("PEG.js", "null", "pegjs", listOf("jsonld")))
        typesList.add(CodeMirror("Perl", "text/x-perl", "perl", listOf("pl", "pm")))
        typesList.add(CodeMirror("PHP", "NULL", "php", listOf("php", "php3", "php4", "php5", "php7", "phtml")))
        typesList.add(CodeMirror("Pig", "text/x-pig", "pig", listOf("pig")))
        typesList.add(CodeMirror("Plain Text", "text/plain", "plaintext", listOf("txt", "text", "conf", "def", "list", "log")))
        typesList.add(CodeMirror("PLSQL", "text/x-plsql", "sql", listOf("pls")))
        typesList.add(CodeMirror("PowerShell", "application/x-powershell", "powershell", listOf("ps1", "psd1", "psm1")))
        typesList.add(CodeMirror("Properties files", "text/x-properties", "properties", listOf("properties", "ini", "in")))
        typesList.add(CodeMirror("ProtoBuf", "text/x-protobuf", "protobuf", listOf("proto")))
        typesList.add(CodeMirror("Python", "text/x-python", "python", listOf("BUILD", "bzl", "py", "pyw")))
        typesList.add(CodeMirror("Puppet", "text/x-puppet", "puppet", listOf("pp")))
        typesList.add(CodeMirror("Q", "text/x-q", "q", listOf("q")))
        typesList.add(CodeMirror("R", "text/x-rsrc", "r", listOf("r", "R")))
        typesList.add(CodeMirror("reStructuredText", "text/x-rst", "rst", listOf("rst")))
        typesList.add(CodeMirror("RPM Spec", "text/x-rpm-spec", "rpm", listOf("spec")))
        typesList.add(CodeMirror("Ruby", "text/x-ruby", "ruby", listOf("rb")))
        typesList.add(CodeMirror("Rust", "text/x-rustsrc", "rust", listOf("rs")))
        typesList.add(CodeMirror("SAS", "text/x-sas", "sas", listOf("sas")))
        typesList.add(CodeMirror("Sass", "text/x-sass", "sass", listOf("sass")))
        typesList.add(CodeMirror("Scala", "text/x-scala", "clike", listOf("scala")))
        typesList.add(CodeMirror("Scheme", "text/x-scheme", "scheme", listOf("scm", "ss")))
        typesList.add(CodeMirror("SCSS", "text/x-scss", "css", listOf("scss")))
        typesList.add(CodeMirror("Shell", "NULL", "shell", listOf("sh", "ksh", "bash")))
        typesList.add(CodeMirror("Sieve", "application/sieve", "sieve", listOf("siv", "sieve")))
        typesList.add(CodeMirror("Slim", "NULL", "slim", listOf("slim")))
        typesList.add(CodeMirror("Smalltalk", "text/x-stsrc", "smalltalk", listOf("st")))
        typesList.add(CodeMirror("Smarty", "text/x-smarty", "smarty", listOf("tpl")))
        typesList.add(CodeMirror("SML", "text/x-sml", "mllike", listOf("sml", "sig", "fun", "smackspec")))
        typesList.add(CodeMirror("Soy", "text/x-soy", "soy", listOf("soy")))
        typesList.add(CodeMirror("SPARQL", "application/sparql-query", "sparql", listOf("rq", "sparql")))
        typesList.add(CodeMirror("SQL", "text/x-sql", "sql", listOf("sql")))
        typesList.add(CodeMirror("Squirrel", "text/x-squirrel", "clike", listOf("nut")))
        typesList.add(CodeMirror("Stylus", "text/x-styl", "stylus", listOf("styl")))
        typesList.add(CodeMirror("Swift", "text/x-swift", "swift", listOf("swift")))
        typesList.add(CodeMirror("LaTeX", "text/x-latex", "stex", listOf("text", "ltx", "tex")))
        typesList.add(CodeMirror("SystemVerilog", "text/x-systemverilog", "verilog", listOf("v", "sv", "svh")))
        typesList.add(CodeMirror("Tcl", "text/x-tcl", "tcl", listOf("tcl")))
        typesList.add(CodeMirror("Textile", "text/x-textile", "textile", listOf("textile")))
        typesList.add(CodeMirror("TOML", "text/x-toml", "toml", listOf("toml")))
        typesList.add(CodeMirror("troff", "text/troff", "troff", listOf("1", "2", "3", "4", "5", "6", "7", "8", "9")))
        typesList.add(CodeMirror("TTCN", "text/x-ttcn", "ttcn", listOf("ttcn", "ttcn3", "ttcnpp")))
        typesList.add(CodeMirror("TTCN_CFG", "text/x-ttcn-cfg", "ttcn-cfg", listOf("cfg")))
        typesList.add(CodeMirror("Turtle", "text/turtle", "turtle", listOf("ttl")))
        typesList.add(CodeMirror("TypeScript", "application/typescript", "javascript", listOf("ts")))
        typesList.add(CodeMirror("TypeScript-JSX", "text/typescript-jsx", "jsx", listOf("tsx")))
        typesList.add(CodeMirror("Web IDL", "text/x-webidl", "webidl", listOf("webidl")))
        typesList.add(CodeMirror("VB.NET", "text/x-vb", "vb", listOf("vb")))
        typesList.add(CodeMirror("VBScript", "text/vbscript", "vbscript", listOf("vbs")))
        typesList.add(CodeMirror("Velocity", "text/velocity", "velocity", listOf("vtl")))
        typesList.add(CodeMirror("Verilog", "text/x-verilog", "verilog", listOf("v")))
        typesList.add(CodeMirror("VHDL", "text/x-vhdl", "vhdl", listOf("vhd", "vhdl")))
        typesList.add(CodeMirror("Vue.js Component", "NULL", "vue", listOf("vue")))
        typesList.add(CodeMirror("XML", "NULL", "xml", listOf("xml", "xsl", "xsd", "svg")))
        typesList.add(CodeMirror("XQuery", "application/xquery", "xquery", listOf("xy", "xquery")))
        typesList.add(CodeMirror("Yacas", "text/x-yacas", "yacas", listOf("ys")))
        typesList.add(CodeMirror("YAML", "NULL", "yaml", listOf("yaml", "yml")))
        typesList.add(CodeMirror("Z80", "text/x-z80", "z80", listOf("z80")))
        typesList.add(CodeMirror("mscgen", "text/x-mscgen", "mscgen", listOf("mscgen", "mscin", "msc")))
        typesList.add(CodeMirror("xu", "text/x-xu", "mscgen", listOf("xu")))
        typesList.add(CodeMirror("msgenny", "text/x-msgenny", "mscgen", listOf("msgenny")))
        typesList.add(CodeMirror("WebAssembly", "text/webassembly", "wast", listOf("wat", "wast")))
    }

}